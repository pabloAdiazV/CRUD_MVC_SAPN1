"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.overEvery = void 0;
const createOver_1 = require("./.internal/createOver");
const arrayEvery_1 = __importDefault(require("./.internal/arrayEvery"));
/**
 * @ignore
 */
const internalOverEvery = (0, createOver_1.createOver)(arrayEvery_1.default);
/**
 * Creates a function that checks if **all** of the `predicates` return
 * truthy when invoked with the arguments it receives.
 *
 * @since 5.11.0
 * @category Util
 * @param predicates The predicates to check.
 * @returns Returns the new function.
 * @example
 *
 * ```js
 * const func = overEvery([Boolean, isFinite])
 *
 * func('1')
 * // => true
 *
 * func(null)
 * // => false
 *
 * func(NaN)
 * // => false
 * ```
 */
function overEvery(...iteratees) {
    return internalOverEvery(...iteratees);
}
exports.overEvery = overEvery;
exports.default = overEvery;
