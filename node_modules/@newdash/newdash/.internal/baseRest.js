"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const setToString_1 = __importDefault(require("./setToString"));
const overRest_1 = __importDefault(require("./overRest"));
const identity_1 = __importDefault(require("./identity"));
/**
 * The base implementation of `rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
    return (0, setToString_1.default)((0, overRest_1.default)(func, start, identity_1.default), func + '');
}
exports.default = baseRest;
