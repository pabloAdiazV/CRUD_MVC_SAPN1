"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const isSymbol_1 = __importDefault(require("../isSymbol"));
/** Used as references for various `Number` constants. */
const NAN = 0 / 0;
/**
 * The base implementation of `toNumber` which doesn't ensure correct
 * conversions of binary, hexadecimal, or octal string values.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 */
function baseToNumber(value) {
    if (typeof value === 'number') {
        return value;
    }
    if ((0, isSymbol_1.default)(value)) {
        return NAN;
    }
    return +value;
}
exports.default = baseToNumber;
