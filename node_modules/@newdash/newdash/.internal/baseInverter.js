"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.baseInverter = void 0;
const baseForOwn_1 = __importDefault(require("./baseForOwn"));
/**
 * The base implementation of `_.invert` and `_.invertBy` which inverts
 * `object` with values transformed by `iteratee` and set by `setter`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform values.
 * @param {Object} accumulator The initial inverted object.
 * @returns {Function} Returns `accumulator`.
 */
function baseInverter(object, setter, iteratee, accumulator) {
    (0, baseForOwn_1.default)(object, function (value, key, object) {
        setter(accumulator, iteratee(value), key, object);
    });
    return accumulator;
}
exports.baseInverter = baseInverter;
exports.default = baseInverter;
