"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const baseAssignValue_1 = __importDefault(require("./baseAssignValue"));
const eq_1 = __importDefault(require("../eq"));
/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
    if ((value !== undefined && !(0, eq_1.default)(object[key], value)) ||
        (value === undefined && !(key in object))) {
        (0, baseAssignValue_1.default)(object, key, value);
    }
}
exports.default = assignMergeValue;
