"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.baseKeys = void 0;
const isPrototype_1 = __importDefault(require("./isPrototype"));
const nativeKeys = Object.keys;
/**
 * The base implementation of `keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param object The object to query.
 * @returns Returns the array of property names.
 */
function baseKeys(object) {
    if (!(0, isPrototype_1.default)(object)) {
        return nativeKeys(object);
    }
    var result = [];
    for (var key in Object(object)) {
        if (Object.hasOwnProperty.call(object, key) && key != 'constructor') {
            result.push(key);
        }
    }
    return result;
}
exports.baseKeys = baseKeys;
exports.default = baseKeys;
