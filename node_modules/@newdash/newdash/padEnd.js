"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.padEnd = void 0;
const createPadding_1 = __importDefault(require("./.internal/createPadding"));
const stringSize_1 = __importDefault(require("./.internal/stringSize"));
const toInteger_1 = __importDefault(require("./toInteger"));
const toString_1 = __importDefault(require("./toString"));
/**
 * Pads `string` on the right side if it's shorter than `length`. Padding
 * characters are truncated if they exceed `length`.
 *
 * @since 5.12.0
 * @category String
 * @param string The string to pad.
 * @param length The padding length.
 * @param chars The string used as padding.
 * @returns Returns the padded string.
 * @example
 *
 * ```js
 * padEnd('abc', 6)
 * // => 'abc   '
 *
 * padEnd('abc', 6, '_-')
 * // => 'abc_-_'
 *
 * padEnd('abc', 2)
 * // => 'abc'
 * ```
 */
function padEnd(string = "", length = 0, chars = " ") {
    string = (0, toString_1.default)(string);
    length = (0, toInteger_1.default)(length);
    const strLength = length ? (0, stringSize_1.default)(string) : 0;
    return (length && strLength < length)
        ? (string + (0, createPadding_1.default)(length - strLength, chars))
        : string;
}
exports.padEnd = padEnd;
exports.default = padEnd;
