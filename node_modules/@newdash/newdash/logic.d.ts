type BoolFunction = (...args: any[]) => boolean;
type AsyncBoolFunction = (...args: any[]) => Promise<boolean>;
/**
 * (sync) allTrue
 *
 * @since 5.15.0
 * @param expressions
 * @returns all expressions return true
 */
export declare function allTrue(...expressions: (boolean | BoolFunction)[]): boolean;
/**
 *
 * (async) allTrue
 * @since 5.15.0
 * @param expressions
 * @returns all expressions return true
 */
export declare function asyncAllTrue(...expressions: (boolean | BoolFunction | AsyncBoolFunction)[]): Promise<boolean>;
/**
 * (sync) anyTrue
 *
 * @since 5.15.0
 * @param expressions
 */
export declare function anyTrue(...expressions: (boolean | BoolFunction)[]): boolean;
/**
 * (async) anyTrue
 *
 * @since 5.15.0
 * @param expressions
 */
export declare function asyncAnyTrue(...expressions: (boolean | BoolFunction | AsyncBoolFunction)[]): Promise<boolean>;
export declare const logic: {
    asyncAllTrue: typeof asyncAllTrue;
    asyncAnyTrue: typeof asyncAnyTrue;
    allTrue: typeof allTrue;
    anyTrue: typeof anyTrue;
};
export {};
