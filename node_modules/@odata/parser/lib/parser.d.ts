import * as Lexer from './lexer';
import { QueryOptionsToken } from './token';
export declare const parserFactory: (fn: any) => (source: any, options: any) => any;
/**
 * odata uri parser
 */
export declare class Parser {
    /**
     * parser ast node with full odata uri
     *
     * @param source
     * @param options
     */
    odataUri(source: string, options?: any): Lexer.Token;
    resourcePath(source: string, options?: any): Lexer.Token;
    query(source: string, options?: any): QueryOptionsToken;
    filter(source: string, options?: any): Lexer.Token;
    keys(source: string, options?: any): Lexer.Token;
    literal(source: string, options?: any): Lexer.Token;
    arrayOrObject(source: string, index?: number): Lexer.Token;
}
export declare function odataUri(source: string, options?: any): Lexer.Token;
export declare function resourcePath(source: string, options?: any): Lexer.Token;
export declare function query(source: string, options?: any): Lexer.Token;
export declare function filter(source: string, options?: any): Lexer.Token;
export declare function keys(source: string, options?: any): Lexer.Token;
export declare function literal(source: string, options?: any): Lexer.Token;
export * from './types';
