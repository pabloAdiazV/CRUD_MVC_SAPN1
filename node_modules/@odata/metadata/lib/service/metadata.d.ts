import type { Request, RequestHandler, Response } from 'express';
import { Edm } from '../edm';
export declare type Format = 'xml' | 'json' | 'application/json' | 'application/xml';
export declare class ServiceMetadata {
    static loadFromJson(json: object, options?: any): ServiceMetadata;
    static processMetadataJson(json: any, options?: Object): ServiceMetadata;
    static processEdmx(edmx: Edm.Edmx, options?: Object): ServiceMetadata;
    static defineEntities(entityConfig: Object, options?: Object): ServiceMetadata;
    edmx: Edm.Edmx;
    private _cache;
    private options;
    constructor(edmx: Edm.Edmx, options?: Object);
    private _tryGetCache;
    getAllEntityTypes(): Array<Edm.EntityType>;
    getEntityTypeByName(modelName: string): Edm.EntityType;
    getAllEntitySets(): Array<Edm.EntitySet>;
    getEntitySetByName(entitySetName: string): Edm.EntitySet;
    document(format?: Format): any;
    process(edmx: Edm.Edmx, options?: Object): any;
    /**
     * create metadata handler for express
     *
     * @param format
     */
    requestHandler(format?: Format): (req: Request, res: Response, __: RequestHandler) => void;
}
